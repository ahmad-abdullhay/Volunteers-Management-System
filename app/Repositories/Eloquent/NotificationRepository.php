<?php

namespace App\Repositories\Eloquent;

use App\Models\Notification;
use App\Repositories\NotificationRepositoryInterface;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;

class NotificationRepository extends BaseRepository implements NotificationRepositoryInterface
{
    /**
     * BaseRepository constructor.
     *
     * @param Notification $model
     */
    public function __construct(Notification $model)
    {
        parent::__construct($model);
    }

    public function create(array $payload): ?Model
    {
        if (!isset($payload['reasonable_type']))
            $payload['reasonable_type'] = 1;

        if (!isset($payload['reasonable_id']))
            $payload['reasonable_id'] = $payload['user_id'];


        $payload['reasonable_type'] = config('notification.type_to_class.'.$payload['reasonable_type']);

        return parent::create($payload);
    }

    public function update(int $modelId, array $payload)
    {
        if (!isset($payload['reasonable_type']))
            $payload['reasonable_type'] =1;

        if (!isset($payload['reasonable_id']))
            $payload['reasonable_id'] = $payload['user_id'];


        $payload['reasonable_type'] = config('notification.type_to_class.'.$payload['reasonable_type']);

        return parent::update($modelId, $payload); // TODO: Change the autogenerated stub
    }

    public function readNotifications($payload)
    {
        Notification::whereIn('id', $payload['notifications'])->where('user_id', Auth::id())->update([
            'is_read' => Notification::STATUS_READ
        ]);
    }

    public function deleteMyNotification($id)
    {
        $notification = Notification::select('id')->where('id', $id)->where('user_id', Auth::id())->first();
        if ($notification)
            return $this->deleteById($notification->id);

        return false;
    }

    public function sendNotificationsToUsers($users, $model, $modelId)
    {
        $data = [];

        foreach ($users as $user){
            $data[] = [
                'user_id' => $user,
                'content' => 'Event Status has been changed',
                'reasonable_type' => config('notification.type_to_class.'.$model),
                'reasonable_id' => $modelId
            ];
        }

        Notification::insert($data);
        return true;
    }
}
